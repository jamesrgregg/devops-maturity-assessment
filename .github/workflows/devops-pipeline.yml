name: DevOps Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: write
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        # checkov:skip=CKV2_GHA_1:Ignore write-all permissions for security events

      - name: Generate SBOM
        run: echo "Generating SBOM..." # Placeholder for SBOM generation command

      - name: Create SBOM with Trivy
        uses: aquasecurity/trivy-action@0.29.0
        with:
          scan-type: fs
          format: cyclonedx
          output: sbom.json

      - name: Create SLSA Level 3 Attestation
        run: echo "Creating SLSA Level 3 attestation..." # Placeholder for attestation command

      - name: Push Artifacts
        run: echo "Pushing artifacts..." # Placeholder for artifact push command

      - name: Package Application
        run: echo "Packaging application..." # Placeholder for containerization command

      - name: Get Release SHA
        run: |
          echo ${{ github.sha }} > Release.txt
          ls -al
          mkdir release
          mv Release.txt release/
          mv sbom.json release/

      - name: Create Release Tag
        id: create_tag
        run: |
          tag_name="v1.0.${{ github.run_number }}"
          echo "::set-output name=tag_name::$tag_name"
          git tag $tag_name
          git push origin $tag_name
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch Tags
        run: |
          git fetch --tags

      - name: Generate Changelog
        run: echo "# Release-${{ steps.create_tag.outputs.tag_name }}" > release/CHANGELOG.txt   

      - name: Create GitHub Release
        run: | 
          gh release create ${{ steps.create_tag.outputs.tag_name }} release/Release.txt release/sbom.json --title "${{ steps.create_tag.outputs.tag_name }}" --notes-file release/CHANGELOG.txt
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
